openapi: 3.0.0
info:
  title: Rust Playground API
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:8082
    description: Local server
paths:
  /blocks/{hash_or_number_or_latest}:
    get:
      tags:
        - Cardano Â» Blocks
      summary: Specific block
      description: |
        Return the content of a requested block.
      parameters:
        - in: path
          name: hash_or_number_or_latest
          required: true
          schema:
            type: string
            format: 64-character case-sensitive hexadecimal string or block number.
          description: Hash or number of the requested block.
          example: 4ea1ba291e8eef538635a53e59fddba7810d1679631cc3aed7c8e6c4091a516a
      responses:
        '200':
          description: Return the contents of the block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schema_block'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
components:
  schemas:
    schema_block:
      type: object
      properties:
        time:
          type: integer
          example: 1641338934
          description: Block creation time in UNIX time
        height:
          type: integer
          nullable: true
          example: 15243593
          description: Block number
        hash:
          type: string
          example: 4ea1ba291e8eef538635a53e59fddba7810d1679631cc3aed7c8e6c4091a516a
          description: Hash of the block
        slot:
          type: integer
          nullable: true
          example: 412162133
          description: Slot number
        epoch:
          type: integer
          nullable: true
          example: 425
          description: Epoch number
        epoch_slot:
          type: integer
          nullable: true
          example: 12
          description: Slot within the epoch
        slot_leader:
          type: string
          example: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2qnikdy
          description: Bech32 ID of the slot leader or specific block description in case there is no slot leader
        size:
          type: integer
          example: 3
          description: Block size in Bytes
        tx_count:
          type: integer
          example: 1
          description: Number of transactions in the block
        output:
          type: string
          nullable: true
          example: '128314491794'
          description: Total output within the block in Lovelaces
        fees:
          type: string
          nullable: true
          example: '592661'
          description: Total fees within the block in Lovelaces
        block_vrf:
          type: string
          nullable: true
          example: vrf_vk1wf2k6lhujezqcfe00l6zetxpnmh9n6mwhpmhm0dvfh3fxgmdnrfqkms8ty
          description: VRF key of the block
          minLength: 65
          maxLength: 65
        op_cert:
          type: string
          nullable: true
          example: da905277534faf75dae41732650568af545134ee08a3c0392dbefc8096ae177c
          description: The hash of the operational certificate of the block producer
        op_cert_counter:
          type: string
          nullable: true
          example: '18'
          description: The value of the counter used to produce the operational certificate
        previous_block:
          type: string
          nullable: true
          example: 43ebccb3ac72c7cebd0d9b755a4b08412c9f5dcb81b8a0ad1e3c197d29d47b05
          description: Hash of the previous block
        next_block:
          type: string
          nullable: true
          example: 8367f026cf4b03e116ff8ee5daf149b55ba5a6ec6dec04803b8dc317721d15fa
          description: Hash of the next block
        confirmations:
          type: integer
          example: 4698
          description: Number of block confirmations
      required:
        - time
        - height
        - hash
        - slot
        - epoch
        - epoch_slot
        - slot_leader
        - size
        - tx_count
        - output
        - fees
        - block_vrf
        - op_cert
        - op_cert_counter
        - previous_block
        - next_block
        - confirmations
  responses:
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              status_code:
                type: integer
                example: 400
              error:
                type: string
                example: Bad Request
              message:
                type: string
                example: Backend did not understand your request.
            required:
              - error
              - message
              - status_code
    '403':
      description: Authentication secret is missing or invalid
      content:
        application/json:
          schema:
            type: object
            properties:
              status_code:
                type: integer
                example: 403
              error:
                type: string
                example: Forbidden
              message:
                type: string
                example: Invalid project token.
            required:
              - error
              - message
              - status_code
    '404':
      description: Component not found
      content:
        application/json:
          schema:
            type: object
            properties:
              status_code:
                type: integer
                example: 404
              error:
                type: string
                example: Not Found
              message:
                type: string
                example: The requested component has not been found.
            required:
              - error
              - message
              - status_code
    '418':
      description: IP has been auto-banned for extensive sending of requests after usage limit has been reached
      content:
        application/json:
          schema:
            type: object
            properties:
              status_code:
                type: integer
                example: 418
              error:
                type: string
                example: Requested Banned
              message:
                type: string
                example: IP has been auto-banned for flooding.
            required:
              - error
              - message
              - status_code
    '429':
      description: Usage limit reached
      content:
        application/json:
          schema:
            type: object
            properties:
              status_code:
                type: integer
                example: 429
              error:
                type: string
                example: Project Over Limit
              message:
                type: string
                example: Usage is over limit.
            required:
              - error
              - message
              - status_code
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              status_code:
                type: integer
                example: 500
              error:
                type: string
                example: Internal Server Error
              message:
                type: string
                example: An unexpected response was received from the backend.
            required:
              - error
              - message
              - status_code
